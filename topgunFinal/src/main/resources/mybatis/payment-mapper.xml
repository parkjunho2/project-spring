<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 결제,결제상세 동시 처리 -->
<mapper namespace="payment">
<!--등록-->
    <select id="paymentSequence" resultType="int">
        select payment_seq.nextval from dual
    </select>
    <select id="paymentDetailSequence" resultType="int">
  		select payment_detail_seq.nextval from dual
    </select>

	<select id="payServiceSequence" resultType="int">
		select payService_seq.nextval from dual
	</select>

    <insert id="paymentInsert">
    insert into payment(
        payment_no, payment_tid, payment_name, 
        payment_total, payment_remain, user_id, flight_id
    ) values(
        #{paymentNo}, #{paymentTid}, #{paymentName}, 
        #{paymentTotal}, #{paymentRemain}, #{userId}, #{flightId}
    )
    </insert>

    <insert id="paymentDetailInsert">
    insert into payment_detail(
        payment_detail_no, flight_id, payment_detail_name, payment_detail_price, 
        payment_detail_qty, payment_detail_seatsNo, payment_detail_origin,  
        payment_detail_status, payment_detail_passport, payment_detail_passanger, 
        payment_detail_english, payment_detail_sex, payment_detail_birth, 
        payment_detail_country, payment_detail_visa, payment_detail_expire
    ) values(
        #{paymentDetailNo}, #{flightId}, #{paymentDetailName}, #{paymentDetailPrice}, 
        #{paymentDetailQty}, #{paymentDetailSeatsNo}, #{paymentDetailOrigin},  
        '승인', #{paymentDetailPassport,jdbcType=VARCHAR}, #{paymentDetailPassanger,jdbcType=VARCHAR}, 
        #{paymentDetailEnglish,jdbcType=VARCHAR}, #{paymentDetailSex,jdbcType=VARCHAR}, #{paymentDetailBirth,jdbcType=VARCHAR}, 
        #{paymentDetailCountry,jdbcType=VARCHAR}, #{paymentDetailVisa,jdbcType=VARCHAR}, #{paymentDetailExpire,jdbcType=VARCHAR}
    )
    </insert>
    
    <!-- 정보 업데이트 (여권정보)-->
	<update id="paymentDetailUpdate">
    UPDATE payment_detail SET
        payment_detail_passport = #{paymentDetailPassport,jdbcType=VARCHAR},
        payment_detail_passanger = #{paymentDetailPassanger,jdbcType=VARCHAR},
        payment_detail_english = #{paymentDetailEnglish,jdbcType=VARCHAR},
        payment_detail_sex = #{paymentDetailSex,jdbcType=VARCHAR},
        payment_detail_birth = #{paymentDetailBirth,jdbcType=VARCHAR},  
        payment_detail_country = #{paymentDetailCountry,jdbcType=VARCHAR},
        payment_detail_visa = #{paymentDetailVisa,jdbcType=VARCHAR},
        payment_detail_expire = #{paymentDetailExpire,jdbcType=VARCHAR} 
    WHERE payment_detail_no = #{paymentDetailNo}
    </update>

    <!-- 정보 조회 -->
    <select id="list" resultType="PaymentDto">
    	select * from payment 
    	where user_id = #{userId}
    	order by payment_no desc
    </select>

	<!-- 상세정보 조회 -->
	<select id="find" resultType="PaymentDto">
		select * from payment where payment_no = #{paymentNo}
	</select>
	<select id="findDetail" resultType="PaymentDetailDto">
		select *	from payment_detail 
		where payment_detail_origin = #{paymentNo} 
		order by payment_detail_no asc
	</select>
	
	<!--  계층형 조회-->
	<resultMap type="PaymentTotalVO" id="paymentTotalVO">
		<association property="paymentDto">
			<result column="payment_no" property="paymentNo"/>
			<result column="payment_name" property="paymentName"/>
			<result column= "payment_total" property="paymentTotal"/>
			<result column="payment_tid" property="paymentTid"/>
			<result column="payment_remain" property="paymentRemain"/>
            <result column="flight_id" property="flightId"/>
			<result column="payment_time" property="paymentTime"  javaType="java.util.Date"/>
			<result column="user_id" property="userId"/>
		</association>
        <association property="flightVO">
            <result column="flight_id" property="flightId"/>
            <result column="flight_time" property="flightTime"/>
            <result column="departure_airport" property="departureAirport"/>
            <result column="departure_time" property="departureTime"/>
            <result column="arrival_airport" property="arrivalAirport"/>
            <result column="arrival_time" property="arrivalTime"/>
        </association>
		<collection property="paymentDetailList" 
		javaType="java.util.List" ofType="PaymentDetailDto" select="findDetail" column="payment_no">
			<result column="payment_detail_no" property="paymentDetailNo"/>
			<result column="payment_detail_name" property="paymentDetailName"/>
			<result column="payment_detail_price" property="paymentDetailPrice"/>
			<result column="payment_detail_qty" property="paymentDetailQty"/>
			<result column="payment_detail_item" property="paymentDetailItem"/>
			<result column="payment_detail_origin" property="paymentDetailOrigin"/>
			<result column="payment_detail_status" property="paymentDetailStatus"/>
		</collection>
	</resultMap>

	 <select id="findTotal" resultMap="paymentTotalVO">
    SELECT 
        p.payment_no AS payment_no,
        p.payment_name AS payment_name,
        p.payment_total AS payment_total,
        p.payment_tid AS payment_tid,
        p.payment_remain AS payment_remain,
        p.flight_id AS flight_id,
        p.payment_time AS payment_time,
        p.user_id AS user_id,
        f.flight_time AS flight_time,
        f.departure_airport AS departure_airport,
        f.departure_time AS departure_time,
        f.arrival_airport AS arrival_airport,
        f.arrival_time AS arrival_time
    FROM payment p
    LEFT JOIN flight f ON p.flight_id = f.flight_id
    WHERE p.user_id = #{userId}
    ORDER BY p.payment_no DESC
</select>

	<!-- 결제 전체 취소 -->
	<update id="cancelAll">
		update payment set payment_remain=0 where payment_no = #{paymentNo}
	</update>
	<update id="cancelAllItem">
		update payment_detail set payment_detail_status='취소' where payment_detail_origin= #{paymentNo}
	</update>
	
	
	<!-- 결제 부분 취소 -->
	<update id="cancelItem">
		update payment_detail set payment_detail_status='취소' where payment_detail_no = #{paymentDetailNo}
	</update>
	
	<update id="decreaseItemRemain">
		update payment set payment_remain = payment_remain - #{money} where payment_no = #{paymentNo}
	</update>
	<!-- 결제 상세 단일 조회 -->
	<select id="selectDetailOne" resultType="PaymentDetailDto">
		select * from payment_detail where payment_detail_no = #{paymentDetailNo}
	</select>

	<!-- 좌석 및 항공편 정보를 조회 -->
	<select id="seatsFlightInfoList" resultType="SeatsFlightInfoVO">
    SELECT 
        s.SEATS_NO,
        s.SEATS_RANK,
        s.SEATS_NUMBER,
        s.SEATS_PRICE,
        s.SEATS_STATUS,
        s.FLIGHT_ID,       
        a.AIRLINE_NAME,
        f.DEPARTURE_TIME,
        f.ARRIVAL_TIME,
        f.FLIGHT_TIME,
        f.DEPARTURE_AIRPORT,
        f.ARRIVAL_AIRPORT,
        f.FLIGHT_PRICE
    FROM 
        SEATS s
    JOIN 
        FLIGHT f ON s.FLIGHT_ID = f.FLIGHT_ID
    JOIN 
        AIRLINE a ON f.USER_ID = a.USER_ID
    </select>
	
    <select id="seatsFlightInfo" resultType="SeatsFlightInfoVO">
        SELECT 
            s.SEATS_NO,
            s.SEATS_RANK,
            s.SEATS_NUMBER,
            s.SEATS_PRICE,
            s.SEATS_STATUS,
            s.FLIGHT_ID,       
            a.AIRLINE_NAME,
            f.DEPARTURE_TIME,
            f.ARRIVAL_TIME,
            f.FLIGHT_TIME,
            f.DEPARTURE_AIRPORT,
            f.ARRIVAL_AIRPORT,
            f.FLIGHT_PRICE
        FROM 
            SEATS s
        JOIN 
            FLIGHT f ON s.FLIGHT_ID = f.FLIGHT_ID
        JOIN 
            AIRLINE a ON f.USER_ID = a.USER_ID
        where s.flight_id = #{flightId}
    </select>

	<select id="exists" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM seats
    WHERE flight_id = #{flightId}
      AND seats_no = #{seatsNo}
      AND seats_status = '사용'
</select>

<select id="timerList" resultType="TimerVO">
SELECT 
    p.payment_no, 
    p.flight_id, 
    f.arrival_time
FROM payment p
LEFT JOIN flight f ON p.flight_id = f.flight_id
WHERE p.payment_no = #{paymentNo}
</select>	

</mapper>